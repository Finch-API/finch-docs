openapi: 3.0.0
info:
  title: Management API Reference
  version: '2020-09-17'
  contact: {}
  description: |-
    The Management API provides a set of system-agnostic functionality for managing your Finch connections.


    [![Open in Postman](https://run.pstmn.io/button.svg)](https://god.gw.postman.com/run-collection/21027137-08db0929-883d-4094-a9ce-dbf5a9bee4a4?action=collection%2Ffork&collection-url=entityId%3D21027137-08db0929-883d-4094-a9ce-dbf5a9bee4a4%26entityType%3Dcollection%26workspaceId%3D1edf19bc-e0a8-41e9-ac55-481a4b50790b)
servers:
  - url: 'https://api.tryfinch.com'
    description: ''
tags:
  - name: Sandbox
paths:
  /providers:
    get:
      summary: Providers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: The id of the payroll provider used in Connect.
                    display_name:
                      type: string
                      description: The display name of the payroll provider.
                    products:
                      type: array
                      description: The list of Finch products supported on this payroll provider.
                      items:
                        type: string
                    category:
                      type: string
                      description: The categroy of the integration. Only `hris` is supported.
                    icon:
                      type: string
                      description: The url to the official icon of the payroll provider.
                    logo:
                      type: string
                      description: The url to the official logo of the payroll provider.
                    mfa_required:
                      type: boolean
                      description: whether MFA is required for the provider.
                    primary_color:
                      type: string
                      description: The hex code for the primary color of the payroll provider.
                    manual:
                      type: boolean
                      description: '[DEPRECATED] Whether the Finch integration with this provider uses the Assisted Connect Flow by default. This field is now deprecated. Please check for a `type` of `assisted` in the `authentication_methods` field instead.'
                    authentication_methods:
                      type: array
                      description: The list of authentication methods supported by the provider.
                      items:
                        $ref: '#/components/schemas/AuthenticationMethod'
              examples:
                Success:
                  value:
                    - id: gusto
                      display_name: Gusto
                      products:
                        - company
                        - directory
                      icon: 'https://finch-assets.s3.us-west-2.amazonaws.com/provider-logos/gustoIcon.png'
                      logo: 'https://finch-assets.s3.us-west-2.amazonaws.com/provider-logos/gustoLogo.png'
                      mfa_required: true
                      primary_color: '#f45d47'
                      authentication_methods:
                        - type: api
                          benefits_support:
                            401k:
                              supported_features:
                                company_contribution: null
                                employee_deduction:
                                  - fixed
                                  - percent
                                frequencies:
                                  - one_time
                                  - every_paycheck
                                annual_maximum: false
                                catch_up: false
                                description: 401(k)
                              supported_operations:
                                company_benefits:
                                  read: not_supported_by_finch
                                  create: supported
                                  update: supported
                                  delete: not_supported_by_finch
                                individual_benefits:
                                  read: not_supported_by_finch
                                  create: supported
                                  delete: supported
                                  update: supported
                      supported_fields:
                        company:
                          id: true
                          legal_name: true
                          entity:
                            type: true
                            subtype: false
                          primary_email: true
                          primary_phone_number: true
                          ein: true
                          accounts:
                            routing_number: true
                            account_name: true
                            institution_name: true
                            account_type: true
                            account_number: true
                          departments:
                            name: true
                            parent:
                              name: true
                          locations:
                            line1: true
                            line2: true
                            city: true
                            state: true
                            postal_code: true
                            country: true
                        directory:
                          paging:
                            count: true
                            offset: true
                          individuals:
                            id: true
                            first_name: true
                            middle_name: true
                            last_name: true
                            is_active: true
                            department: null
                            manager:
                              id: true
                        individual:
                          id: true
                          first_name: true
                          middle_name: true
                          last_name: true
                          preferred_name: true
                          dob: true
                          gender: false
                          ethnicity: false
                          ssn: true
                          emails:
                            data: true
                            type: true
                          phone_numbers:
                            data: true
                            type: true
                          residence:
                            city: true
                            country: true
                            line1: true
                            line2: true
                            postal_code: true
                            state: true
                        employment:
                          id: true
                          first_name: true
                          middle_name: true
                          last_name: true
                          title: true
                          start_date: true
                          end_date: true
                          is_active: true
                          income_history: false
                          class_code: true
                          custom_fields: false
                          department:
                            name: true
                          employment:
                            type: true
                            subtype: true
                          income:
                            amount: true
                            currency: true
                            unit: true
                          location:
                            line1: true
                            line2: true
                            city: true
                            state: true
                            postal_code: true
                            country: true
                          manager: null
                        payment:
                          id: true
                          pay_date: true
                          debit_date: false
                          company_debit: true
                          gross_pay: true
                          net_pay: true
                          employer_taxes: true
                          employee_taxes: true
                          individual_ids: true
                          pay_period:
                            start_date: false
                            end_date: false
                        pay_statement:
                          paging:
                            count: true
                            offset: true
                          pay_statements:
                            individual_id: true
                            type: true
                            payment_method: true
                            total_hours: true
                            gross_pay: true
                            net_pay: true
                            earnings:
                              type: true
                              name: true
                              amount: true
                              currency: true
                            employee_deductions:
                              name: true
                              amount: true
                              type: true
                              pre_tax: true
                              currency: true
                            employer_deductions:
                              name: true
                              amount: true
                              currency: true
                            taxes:
                              type: true
                              name: true
                              employer: true
                              amount: true
                              currency: true
      operationId: get-providers
      description: Return details on all available payroll and HR systems.
      parameters:
        - $ref: '#/components/parameters/API-Version'
      security: []
  /introspect:
    get:
      summary: Introspect
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  account_id:
                    type: string
                    format: uuid
                    description: The Finch uuid corresponding to the employer account that was used to make this connection.
                  client_id:
                    type: string
                    description: The client id of the application associated with the `access_token`.
                  client_type:
                    $ref: '#/components/schemas/ClientType'
                  connection_type:
                    $ref: '#/components/schemas/ConnectionType'
                  company_id:
                    type: string
                    description: The Finch uuid of the company associated with the `access_token`.
                  products:
                    type: array
                    description: An array of the authorized products associated with the `access_token`.
                    items:
                      type: string
                  username:
                    type: string
                    description: The account username used for login associated with the `access_token`.
                    nullable: true
                  payroll_provider_id:
                    type: string
                    description: The payroll provider associated with the `access_token`.
                  manual:
                    type: boolean
                    description: '[DEPRECATED] Whether the connection associated with the `access_token` uses the Assisted Connect Flow. (`true` if using Assisted Connect, `false` if connection is automated). This field is now deprecated. Please look for the `assisted` type in `authentication_methods` instead.'
                  authentication_methods:
                    type: array
                    x-stoplight:
                      id: b3dendp1j6f5w
                    items:
                      x-stoplight:
                        id: wpu4ak9ukniy6
                      type: object
                      properties:
                        type:
                          $ref: '#/components/schemas/AuthenticationType'
                        connection_status:
                          type: object
                          x-stoplight:
                            id: 1cfz1pwwcaawt
                          description: |-
                            The status of the connection for this authentication method:

                            `pending` - [`assisted` only] This employer has created a token, and we are waiting for access to its provider <br>
                            `processing` - [`assisted` only] We have received an invitation from this employer's provider with the correct permissions and are in the process of pulling their data for the first time <br>
                            `connected` - This connection is working as expected <br>
                            `reauth` - This employer needs to re-authenticate <br>
                            `error_no_accout_setup` - [`assisted` only] This employer has created a token, but we have not received an invitation to its system. Please instruct the employer to follow the instructions in Finch Connect to add Finch as a third-party admin <br>
                            `error_permissions` - [`assisted` only] This employer has added Finch successfully, but with improper permissions. Please instruct the employer to re-add Finch following the instructions in Finch Connect <br>
                          properties:
                            status:
                              $ref: '#/components/schemas/ConnectionStatus'
                            message:
                              type: string
                              x-stoplight:
                                id: rec630ll5o6xz
              examples:
                Success:
                  value:
                    account_id: d8ef1814-5913-492f-b5c0-a16e2d6432c9
                    client_id: 25ea8bd8-f76b-41f9-96e3-1e6162021c50
                    client_type: production
                    company_id: 87eb4bc3-f76b-35e7-78d2-8f7822021d73
                    connection_type: provider
                    products:
                      - company
                      - directory
                    username: johndoe@tryfinch.com
                    payroll_provider_id: gusto
                    manual: 'false'
                    authentication_methods:
                      - type: assisted
                        connection_status:
                          status: pending
                          message: 'This employer has created a token, and we are waiting for access to its provider'
                      - type: credential
                        connection_status:
                          status: connected
                          message: This employer is working as expected
      operationId: get-introspect
      description: Read account information associated with an `access_token`
      parameters:
        - $ref: '#/components/parameters/API-Version'
  /disconnect:
    post:
      summary: Disconnect
      operationId: post-disconnect
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: 'If the request is successful, Finch will return “success” (HTTP 200 status).'
              examples:
                Success:
                  value:
                    status: success
      description: |-
        Disconnect one or more `access_token`s from your application. Deletion is based on both the employer and provider of the `access_token` used to call this endpoint, and will also delete all tokens with the same employer/provider pair. Other tokens for the same employer, but connected to a different provider, require a separate call.
        <br /><br />We require applications to implement the Disconnect endpoint for billing and security purposes.
      parameters:
        - $ref: '#/components/parameters/API-Version'
  /forward:
    post:
      summary: Request Forwarding
      operationId: post-forward
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  headers:
                    type: object
                    description: 'The HTTP headers of the forwarded request’s response, exactly as received from the underlying integration’s API.'
                    nullable: true
                  statusCode:
                    type: integer
                    description: 'The HTTP status code of the forwarded request’s response, exactly received from the underlying integration’s API. This value will be returned as an integer.'
                  data:
                    type: string
                    description: A string representation of the HTTP response body of the forwarded request’s response received from the underlying integration’s API. This field may be null in the case where the upstream system’s response is empty.
                    nullable: true
                  request:
                    type: object
                    description: 'An object containing details of your original forwarded request, for your ease of reference.'
                    properties:
                      method:
                        type: string
                        description: 'The HTTP method that was specified for the forwarded request. Valid values include: `GET` , `POST` , `PUT` , `DELETE` , and `PATCH`.'
                      route:
                        type: string
                        description: The URL route path that was specified for the forwarded request.
                      headers:
                        type: object
                        description: 'The specified HTTP headers that were included in the forwarded request. If no headers were specified, this will be returned as `null`.'
                        nullable: true
                      params:
                        type: object
                        description: 'The query parameters that were included in the forwarded request. If no query parameters were specified, this will be returned as `null`.'
                        nullable: true
                      data:
                        type: string
                        description: 'The body that was specified for the forwarded request. If a value was not specified in the original request, this value will be returned as null ; otherwise, this value will always be returned as a string.'
                        nullable: true
                    required:
                      - method
                      - route
                      - headers
                      - params
                      - data
                required:
                  - headers
                  - statusCode
                  - data
                  - request
              examples:
                Success:
                  value:
                    request:
                      method: POST
                      route: /people/search
                      headers:
                        content-type: application/json
                      params:
                        showInactive: true
                        humanReadable: true
                      data: null
                    headers:
                      date: 'Sun, 17 Sep 2023 21:27:25 GMT'
                      content-type: application/json
                    statusCode: 200
                    data: '{"employees":[{"/work/custom/field_1693264321143":{"value":580192},"fullName":"Anna Gibbons","/payroll/employment/siteWorkingPattern":{"value":{"workingPatternType":"partial_week","days":{"sunday":false,"tuesday":true,"wednesday":true,"monday":true,"friday":true,"thursday":true,"saturday":false},"hoursPerDay":9,"workingPatternId":null}},"/about/avatar":{"value":"https://media-process.hibob.com/image/upload/v1/hibob/demo-avatar/demo_employee/images/UiRYuQQyDc4sLbYzFFtN_59.jpg?__cld_token__=exp=4795680381~acl=*%2fhibob%2fdemo-avatar%2fdemo_employee%2fimages%2fUiRYuQQyDc4sLbYzFFtN_59.jpg*~hmac=07e5aff698027029ebbb4d8cb067db044ec46a86f9bf71430c53cc590f9c07a6"},"displayName":"Anna Gibbons","/work/reportsTo/email":{"value":"joshua.tyler_632127@samplebob.com"},"/payroll/employment/activeEffectiveDate":{"value":"2015-03-03"},"payroll":{"employment":{"standardWorkingPattern":null,"fte":100,"type":null,"flsaCode":null,"actualWorkingPattern":{"workingPatternType":"partial_week","days":{"sunday":false,"tuesday":true,"wednesday":true,"monday":true,"friday":true,"thursday":true,"saturday":false},"hoursPerDay":9,"workingPatternId":null},"contract":"Full time","customColumns":{"column_1693433488092":null,"column_1693419526345":null},"calendarId":null,"salaryPayType":null,"workingPattern":null,"activeEffectiveDate":"2015-03-03","weeklyHours":45,"siteWorkingPattern":{"workingPatternType":"partial_week","days":{"sunday":false,"tuesday":true,"wednesday":true,"monday":true,"friday":true,"thursday":true,"saturday":false},"hoursPerDay":9,"workingPatternId":null}}},"/root/firstName":{"value":"Anna"},"/work/employeeIdInCompany":{"value":38},"/work/tenureDurationYears":{"value":8.545},"/about/foodPreferences":{"value":[]},"/work/site":{"value":"New York (Demo)"},"/work/tenureYears":{"value":9},"creationDateTime":"2023-07-13T06:37:04.94395","/about/hobbies":{"value":["theatre","film","music"]},"/root/email":{"value":"anna.gibbons_632127@samplebob.com"},"/work/title":{"value":"Sales Manager"},"employee":{"payrollManager":null,"hrbp":null,"itAdmin":null,"buddy":null},"work":{"shortStartDate":"03-03","startDate":"2015-03-03","manager":"3145813558047015811","tenureDuration":{"periodISO":"P8Y6M16D","sortFactor":3076,"humanize":"8 years, 6 months and 16 days"},"custom":{"field_1693264337015":580192,"field_1693264321143":580192},"durationOfEmployment":{"periodISO":"P8Y6M16D","sortFactor":3076,"humanize":"8 years, 6 months and 16 days"},"reportsToIdInCompany":27,"employeeIdInCompany":38,"reportsTo":{"displayName":"Joshua Tyler","email":"joshua.tyler_632127@samplebob.com","surname":"Tyler","firstName":"Joshua","id":"3145813558047015811"},"indirectReports":null,"siteId":2477371,"tenureDurationYears":8.545,"department":"Sales","tenureYears":9,"isManager":false,"title":"Sales Manager","site":"New York (Demo)","activeEffectiveDate":"2015-03-03","directReports":null,"secondLevelManager":"3145813528661721978","daysOfPreviousService":0,"yearsOfService":8.545},"/payroll/employment/weeklyHours":{"value":45},"/root/creationDateTime":{"value":"2023-07-13T06:37:04.94395"},"avatarUrl":"https://media-process.hibob.com/image/upload/v1/hibob/demo-avatar/demo_employee/images/UiRYuQQyDc4sLbYzFFtN_59.jpg?__cld_token__=exp=4795680381~acl=*%2fhibob%2fdemo-avatar%2fdemo_employee%2fimages%2fUiRYuQQyDc4sLbYzFFtN_59.jpg*~hmac=07e5aff698027029ebbb4d8cb067db044ec46a86f9bf71430c53cc590f9c07a6","secondName":null,"/work/startDate":{"value":"2015-03-03"},"about":{"foodPreferences":[],"socialData":{"linkedin":null,"twitter":null,"facebook":null},"superpowers":["proof reading"],"hobbies":["theatre","film","music"],"about":"I dont have a life story, my story is my life ","avatar":"https://media-process.hibob.com/image/upload/v1/hibob/demo-avatar/demo_employee/images/UiRYuQQyDc4sLbYzFFtN_59.jpg?__cld_token__=exp=4795680381~acl=*%2fhibob%2fdemo-avatar%2fdemo_employee%2fimages%2fUiRYuQQyDc4sLbYzFFtN_59.jpg*~hmac=07e5aff698027029ebbb4d8cb067db044ec46a86f9bf71430c53cc590f9c07a6"},"/root/fullName":{"value":"Anna Gibbons"},"/payroll/employment/contract":{"value":"Full time"},"/payroll/employment/actualWorkingPattern":{"value":{"workingPatternType":"partial_week","days":{"sunday":false,"tuesday":true,"wednesday":true,"monday":true,"friday":true,"thursday":true,"saturday":false},"hoursPerDay":9,"workingPatternId":null}},"companyId":632127,"/root/coverImageUrl":{"value":"https://media-process.hibob.com/image/upload/v1/hibob/public-image/cover/default_cover_image.png?token=X19jbGRfdG9rZW5fXz1leHA9NDg0OTgzNjczOX5hY2w9KiUyZmhpYm9iJTJmcHVibGljLWltYWdlJTJmY292ZXIlMmZkZWZhdWx0X2NvdmVyX2ltYWdlLnBuZyp+aG1hYz0zMjY3NjE4ZDQ1MzZjZjE3MWFiM2Y2MzJlY2JmZmQ5MWZkYTRmY2FmOGY3MDExYjllNmZlZTI4Njc0MzZlN2M5&vendor=cloudinary"},"/work/secondLevelManager":{"value":"3145813528661721978"},"/work/yearsOfService":{"value":8.545},"/work/daysOfPreviousService":{"value":0},"/about/about":{"value":"I dont have a life story, my story is my life "},"/root/avatarUrl":{"value":"https://media-process.hibob.com/image/upload/v1/hibob/demo-avatar/demo_employee/images/UiRYuQQyDc4sLbYzFFtN_59.jpg?__cld_token__=exp=4795680381~acl=*%2fhibob%2fdemo-avatar%2fdemo_employee%2fimages%2fUiRYuQQyDc4sLbYzFFtN_59.jpg*~hmac=07e5aff698027029ebbb4d8cb067db044ec46a86f9bf71430c53cc590f9c07a6"},"/root/surname":{"value":"Gibbons"},"/work/shortStartDate":{"value":"03-03"},"/work/activeEffectiveDate":{"value":"2015-03-03"},"/root/id":{"value":"3145813590838084494"},"email":"anna.gibbons_632127@samplebob.com","/work/manager":{"value":"3145813558047015811"},"surname":"Gibbons","/work/reportsTo":{"value":{"displayName":"Joshua Tyler","email":"joshua.tyler_632127@samplebob.com","surname":"Tyler","firstName":"Joshua","id":"3145813558047015811"}},"/root/displayName":{"value":"Anna Gibbons"},"/root/companyId":{"value":632127},"/payroll/employment/fte":{"value":100},"/work/department":{"value":"Sales"},"/work/isManager":{"value":false},"/work/custom/field_1693264337015":{"value":580192},"/work/reportsToIdInCompany":{"value":27},"/work/tenureDuration":{"value":{"periodISO":"P8Y6M16D","sortFactor":3076,"humanize":"8 years, 6 months and 16 days"}},"coverImageUrl":"https://media-process.hibob.com/image/upload/v1/hibob/public-image/cover/default_cover_image.png?token=X19jbGRfdG9rZW5fXz1leHA9NDg0OTgzNjczOX5hY2w9KiUyZmhpYm9iJTJmcHVibGljLWltYWdlJTJmY292ZXIlMmZkZWZhdWx0X2NvdmVyX2ltYWdlLnBuZyp+aG1hYz0zMjY3NjE4ZDQ1MzZjZjE3MWFiM2Y2MzJlY2JmZmQ5MWZkYTRmY2FmOGY3MDExYjllNmZlZTI4Njc0MzZlN2M5&vendor=cloudinary","/about/superpowers":{"value":["proof reading"]},"/work/siteId":{"value":2477371},"id":"3145813590838084494","firstName":"Anna","/work/durationOfEmployment":{"value":{"periodISO":"P8Y6M16D","sortFactor":3076,"humanize":"8 years, 6 months and 16 days"}}}]}'
      description: |-
        The Forward API allows you to make direct requests to an employment system. If Finch’s unified API
        doesn’t have a data model that cleanly fits your needs, then Forward allows you to push or pull
        data models directly against an integration’s API.
      parameters:
        - $ref: '#/components/parameters/API-Version'
      requestBody:
        $ref: '#/components/requestBodies/Forward'
      x-stoplight:
        id: dwnn4o21afzyr
  /jobs/automated:
    get:
      summary: List All Automated Jobs
      operationId: get-jobs-automated
      description: 'Get all automated jobs. Automated jobs are completed by a machine. By default, jobs are sorted in descending order by submission time. For scheduled jobs such as data syncs, only the next scheduled job is shown.'
      parameters:
        - $ref: '#/components/parameters/API-Version'
        - $ref: '#/components/parameters/Content-Type'
      responses:
        '200':
          description: Job was found
          content:
            application/json:
              schema:
                type: object
                properties:
                  '':
                    $ref: '#/components/schemas/Paging'
                    x-stoplight:
                      id: r3x5cv8k9mzrm
                  meta:
                    type: object
                    x-stoplight:
                      id: 1azmf0sda46kp
                    properties:
                      quotas:
                        type: object
                        x-stoplight:
                          id: cyrjsuvgo4yfp
                        description: Information about remaining quotas for this connection. Only applicable for customers opted in to use Finch's Data Sync Refresh endpoint (`POST /jobs/automated`). Please contact a Finch representative for more details.
                        properties:
                          data_sync_all:
                            type: object
                            x-stoplight:
                              id: heliy73b0suoc
                            properties:
                              allowed_refreshes:
                                type: integer
                                x-stoplight:
                                  id: rfvybbbqzxuye
                              remaining_refreshes:
                                type: integer
                                x-stoplight:
                                  id: gg9vh14p7m3z3
                  data:
                    type: array
                    x-stoplight:
                      id: choheuhhko7pu
                    items:
                      $ref: '#/components/schemas/AutomatedAsyncJob'
                      x-stoplight:
                        id: gaxb3wl3umjse
              examples:
                Example 1:
                  value:
                    '':
                      count: 10
                      offset: 0
                    meta:
                      quotas:
                        data_sync_all:
                          allowed_refreshes: 2
                          remaining_refreshes: 2
                    data:
                      - job_id: 453bd7d7-5355-4d6d-a38e-d9e7eb218c3f
                        job_url: 'https://api.tryfinch.com/job/automated/453bd7d7-5355-4d6d-a38e-d9e7eb218c3f'
                        type: data_sync_all
                        status: pending
                        created_at: '2019-08-24T14:15:22Z'
                        scheduled_at: '2019-08-24T14:15:22Z'
                        started_at: '2019-08-24T14:15:22Z'
                        completed_at: '2019-08-24T14:15:22Z'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                  status:
                    type: integer
                  code:
                    type: integer
                  name:
                    type: string
                  message:
                    type: string
              examples:
                Example 1:
                  value:
                    statusCode: 401
                    status: 401
                    code: 401
                    message: 'Unauthorized request: no authentication given'
                    name: unauthorized_request_error
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                  status:
                    type: integer
                  code:
                    type: integer
                  name:
                    type: string
                  message:
                    type: string
              examples:
                Example 1:
                  value:
                    statusCode: 404
                    status: 404
                    code: 404
                    message: could not find job with id job-fb3b25dc-02dc-48eb-9cfc-3f9837276884
                    name: not_found_error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                limit:
                  type: integer
                  x-stoplight:
                    id: ma9qbqvnyzd45
                  description: The number of items to return. Defaults to 100.
                offset:
                  type: integer
                  x-stoplight:
                    id: ecl0kzfvns278
                  description: Where in the list of jobs to start returning from. Defaults to index 0.
        description: ''
    post:
      summary: Enqueue a New Automated Job
      operationId: post-jobs-automated
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  job_id:
                    type: string
                    format: uuid
                    description: The id of the job that has been created.
                  job_url:
                    type: string
                    x-stoplight:
                      id: takh9u7o862k5
                    description: The url that can be used to retrieve the job status
                  allowed_refreshes:
                    type: integer
                    description: 'The number of allowed refreshes per hour (per hour, fixed window)'
                  remaining_refreshes:
                    type: integer
                    description: 'The number of remaining refreshes available (per hour, fixed window)'
              examples:
                Example 1:
                  value:
                    job_id: 453bd7d7-5355-4d6d-a38e-d9e7eb218c3f
                    job_url: 'https://api.tryfinch.com/jobs/automated/453bd7d7-5355-4d6d-a38e-d9e7eb218c3f'
                    allowed_refreshes: 2
                    remaining_refreshes: 1
            application/xml:
              schema:
                type: object
                properties: {}
        '202':
          description: Accepted. This response will be returned if a job is already enqueued for the connection. This case does not consume any job quota as it just returns the details of an existing job.
          content:
            application/json:
              schema:
                type: object
                properties:
                  job_id:
                    type: string
                    format: uuid
                    x-stoplight:
                      id: po77vhm5eksc0
                    description: The id of the job that has been created.
                  job_url:
                    type: string
                    x-stoplight:
                      id: i6kolzhowzfcl
                    description: The url that can be used to retrieve the job status
                  allowed_refreshes:
                    type: integer
                    description: 'The number of allowed refreshes per hour (per hour, fixed window)'
                  remaining_refreshes:
                    type: integer
                    description: 'The number of remaining refreshes available (per hour, fixed window)'
              examples:
                Example 1:
                  value:
                    job_Id: de9113d6-e2fa-4c72-ba4a-ee1d8a4f8df6
                    allowed_refreshes: 2
                    remaining_refreshes: 2
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                  status:
                    type: integer
                  code:
                    type: integer
                  message:
                    type: string
                  name:
                    type: string
              examples:
                Example 1:
                  value:
                    statusCode: 400
                    status: 400
                    code: 400
                    message: cannot create automated job for Assisted Connect token
                    name: bad_request
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                  status:
                    type: integer
                  code:
                    type: integer
                  name:
                    type: string
                  message:
                    type: string
              examples:
                Example 1:
                  value:
                    statusCode: 401
                    status: 401
                    code: 401
                    message: 'Unauthorized request: no authentication given'
                    name: unauthorized_request_error
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                type: object
                properties:
                  allowed_refreshes:
                    type: integer
                    description: 'The number of allowed refreshes per hour (per hour, fixed window)'
                  remaining_refreshes:
                    type: integer
                    description: 'The number of remaining refreshes available (per hour, fixed window)'
                  retry_at:
                    type: string
                    format: date-time
                    description: The datetime when quota for enqueuing new jobs will again be available. Only shown for a 429 response.
              examples:
                Example 1:
                  value:
                    allowed_refreshes: 2
                    remaining_refreshes: 0
                    retry_at: '2019-08-24T14:15:22Z'
      parameters:
        - $ref: '#/components/parameters/API-Version'
        - $ref: '#/components/parameters/Content-Type'
      description: |-
        Enqueue an automated job. Currently, only the `data_sync_all` job type is supported, which will enqueue a job to re-sync all data for a connection. `data_sync_all` has a concurrency limit of 1 job at a time per connection. This means that if this endpoint is called while a job is already in progress for this connection, Finch will return the `job_id` of the job that is currently in progress. Finch allows a fixed window rate limit of 1 forced refresh per hour per connection.

        This endpoint is available for *Scale* tier customers as an add-on. To request access to this endpoint, please contact your Finch account manager.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: The type of job to start. Currently the only supported type is `data_sync_all`
                  enum:
                    - data_sync_all
              required:
                - type
          application/xml:
            schema:
              type: object
              properties: {}
  '/jobs/automated/{job_id}':
    parameters:
      - schema:
          type: string
        name: job_id
        in: path
        required: true
    get:
      summary: Retrieve an Automated Job
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutomatedAsyncJob'
              examples:
                Example 1:
                  value:
                    job_id: 453bd7d7-5355-4d6d-a38e-d9e7eb218c3f
                    job_url: 'https://api.tryfinch.com/job/automated/453bd7d7-5355-4d6d-a38e-d9e7eb218c3f'
                    type: data_sync_all
                    status: pending
                    created_at: '2019-08-24T14:15:22Z'
                    scheduled_at: '2019-08-24T14:15:22Z'
                    started_at: '2019-08-24T14:15:22Z'
                    completed_at: '2019-08-24T14:15:22Z'
        '404':
          description: Not Found
      operationId: get-jobs-job_id
      parameters:
        - $ref: '#/components/parameters/API-Version'
        - $ref: '#/components/parameters/Content-Type'
      description: Get an automated job by `job_id`.
  '/jobs/manual/{job_id}':
    parameters:
      - schema:
          type: string
        name: job_id
        in: path
        required: true
    get:
      summary: Retrieve a Manual Job
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManualAsyncJob'
              examples:
                Example 1:
                  value:
                    job_id: 497d98f3-580a-4ab9-830a-af2346d029b2
                    status: complete
                    body:
                      - individual_id: 430f9d95-1dcf-4b99-b616-45f814416890
                        code: 201
                        message: Successfully enrolled individual in benefit
                      - individual_id: 647975ac-1e0f-4e9c-b705-e3042da48581
                        code: 200
                        message: Successfully updated enrollment for individual
                      - individual_id: 4a0a3b15-d3d6-41c2-a4a4-ca4ed1b68cf8
                        code: 404
                        message: Individual not found
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  finch_code:
                    type: string
                  name:
                    type: string
                  message:
                    type: string
              examples:
                Example 1:
                  value:
                    code: 400
                    name: invalid_request_error
                    message: job_id is required
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  finch_code:
                    type: string
                  name:
                    type: string
                  message:
                    type: string
              examples:
                Example 1:
                  value:
                    code: 404
                    finch_code: item_not_found
                    name: not_found_error
                    message: could not find job with id '49142223-78e0-4092-80e1-313f510b0977'
      operationId: get-jobs-manual-job_id
      description: Get a manual job by `job_id`. Manual jobs are completed by a human and include Assisted Benefits jobs.
      parameters:
        - $ref: '#/components/parameters/API-Version'
        - $ref: '#/components/parameters/Content-Type'
  /sandbox/connections:
    post:
      summary: Create a new Sandbox Connection
      operationId: post-sandbox-connections
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  company_id:
                    type: string
                    x-stoplight:
                      id: kv6fgmbo2gqh1
                    format: uuid
                  provider_id:
                    type: string
                    x-stoplight:
                      id: ojfhoewcu8cfi
                    format: uuid
                  account_id:
                    type: string
                    x-stoplight:
                      id: 9s6g9y13ugn6u
                    format: uuid
                  authentication_type:
                    $ref: '#/components/schemas/AuthenticationType'
                  products:
                    type: array
                    x-stoplight:
                      id: 1slb646akbkew
                    items:
                      x-stoplight:
                        id: 6y5gie5ir3y62
                      type: string
                  access_token:
                    type: string
                    x-stoplight:
                      id: nrmhqhlpkuw22
                    format: uuid
                required:
                  - company_id
                  - provider_id
                  - account_id
                  - authentication_type
                  - products
                  - access_token
              examples:
                success:
                  value:
                    company_id: b2e6a1c3-1a5e-44ae-a8fd-81f76fd715cf
                    provider_id: fe3d49af-4061-436b-ae60-f7044f252a44
                    account_id: 449e7a5c-69d3-4b8a-aaaf-5c9b713ebc65
                    authentication_type: api_token
                    products:
                      - 'employer:company'
                      - 'employer:directory'
                      - 'employer:individual'
                    access_token: 7eb55bcf-6593-4040-afac-252ee1f78e20
      x-stoplight:
        id: prx8dxxl61uzs
      description: Create a new connection (new company/provider pair) with a new account
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                provider_id:
                  type: string
                  x-stoplight:
                    id: uun3x0odjceio
                authentication_type:
                  $ref: '#/components/schemas/AuthenticationType'
                products:
                  type: array
                  x-stoplight:
                    id: avt2ebodunkly
                  items:
                    x-stoplight:
                      id: 3aqf1rqbk9lnu
                    type: string
                employer_size:
                  type: integer
                  x-stoplight:
                    id: 3rhgbz7ot0lxv
                  description: 'Optional: the size of the employer to be created with this connection. Defaults to 20   '
              required:
                - provider_id
      tags:
        - Sandbox
      parameters: []
      security:
        - basicAuth: []
  /sandbox/connections/accounts:
    post:
      summary: Create a new sandbox account
      operationId: post-sandbox-connections-accounts
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  company_id:
                    type: string
                    x-stoplight:
                      id: 1p5kihnqf1jf0
                    format: uuid
                  provider_id:
                    type: string
                    x-stoplight:
                      id: y0ypgpa5dueh3
                  account_id:
                    type: string
                    x-stoplight:
                      id: mcvmwla5cba05
                    format: uuid
                  authentication_type:
                    $ref: '#/components/schemas/AuthenticationType'
                  products:
                    type: array
                    x-stoplight:
                      id: fwvam102bpoq9
                    items:
                      x-stoplight:
                        id: 5xucktm15atw8
                      type: string
                  access_token:
                    type: string
                    x-stoplight:
                      id: kqh1a21inu49j
                    format: uuid
                required:
                  - company_id
                  - provider_id
                  - account_id
                  - authentication_type
                  - products
                  - access_token
              examples:
                Example 1:
                  value:
                    company_id: b2e6a1c3-1a5e-44ae-a8fd-81f76fd715cf
                    provider_id: string
                    account_id: 449e7a5c-69d3-4b8a-aaaf-5c9b713ebc65
                    authentication_type: credentials
                    products:
                      - company
                    access_token: 7eb55bcf-6593-4040-afac-252ee1f78e20
      x-stoplight:
        id: oa8w9ocdh7gxy
      description: Create a new account for an existing connection (company/provider pair)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                company_id:
                  type: string
                  x-stoplight:
                    id: bxiqn7ui5ziyk
                  format: uuid
                provider_id:
                  type: string
                  x-stoplight:
                    id: 8xrj1z96wb9o5
                authentication_type:
                  $ref: '#/components/schemas/AuthenticationType'
                products:
                  type: array
                  x-stoplight:
                    id: xs1otbzss1wzy
                  description: 'Optional, defaults to Organization products (`company`, `directory`, `employment`, `individual`)'
                  items:
                    x-stoplight:
                      id: o5i9uqxupj0vy
                    type: string
              required:
                - company_id
                - provider_id
      tags:
        - Sandbox
      security:
        - basicAuth: []
    parameters: []
    put:
      summary: Update a sandbox account
      operationId: put-sandbox-connections-accounts
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  account_id:
                    type: string
                    x-stoplight:
                      id: 4ch2hzvpttece
                  authentication_type:
                    $ref: '#/components/schemas/AuthenticationType'
                  company_id:
                    type: string
                    x-stoplight:
                      id: xfsthrlkcp8s7
                    format: uuid
                  provider_id:
                    type: string
                    x-stoplight:
                      id: ynm6785wgoflk
                  products:
                    type: array
                    x-stoplight:
                      id: p30ckl1xm5ei2
                    items:
                      x-stoplight:
                        id: m8u40xcnl3wlk
                      type: string
                required:
                  - account_id
                  - authentication_type
                  - company_id
                  - provider_id
                  - products
              examples:
                success:
                  value:
                    account_id: string
                    authentication_type: credentials
                    company_id: b2e6a1c3-1a5e-44ae-a8fd-81f76fd715cf
                    provider_id: string
                    products:
                      - string
      x-stoplight:
        id: 0mynrrdwnfb72
      description: Update an existing sandbox account
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                connection_status:
                  $ref: '#/components/schemas/ConnectionStatus'
            examples:
              Example 1:
                value:
                  connection_status: reauth
      tags:
        - Sandbox
  /sandbox/company:
    put:
      summary: Update a sandbox company's data
      operationId: put-sandbox-company
      responses:
        '200':
          description: OK
      x-stoplight:
        id: gyzgeqxw1nu2n
      tags:
        - Sandbox
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: The company fields to set. Takes all fields from the `/company` endpoint. All fields are optional.
  /sandbox/directory:
    post:
      summary: Add new individuals to a sandbox company
      operationId: post-sandbox-directory
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                description: The individuals which were created
                items:
                  x-stoplight:
                    id: bzhypb0nsnbj4
                  type: object
      x-stoplight:
        id: rxsjtho6i7tys
      tags:
        - Sandbox
      requestBody:
        content:
          application/json:
            schema:
              type: array
              description: Array of individuals to create. Takes all combined fields from `/individual` and `/employment` endpoints. All fields are optional.
              items:
                x-stoplight:
                  id: hndy1lcdt3itt
                type: object
    delete:
      summary: Remove individuals from a company
      operationId: delete-sandbox-directory
      responses:
        '200':
          description: OK
      x-stoplight:
        id: x05esgm0ogshc
      requestBody:
        content:
          application/json:
            schema:
              type: array
              description: Array of individual ids to remove
              items:
                x-stoplight:
                  id: 51u3ixg5n133e
                type: string
                format: uuid
      tags:
        - Sandbox
  '/sandbox/individual/{individual_id}':
    parameters:
      - schema:
          type: string
        name: individual_id
        in: path
        required: true
    put:
      summary: Update sandbox individual
      operationId: put-sandbox-individual-individual_id
      responses:
        '200':
          description: OK
      x-stoplight:
        id: 4unl71g0bxryw
      tags:
        - Sandbox
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: Fields to update. Takes all fields from the `/individual` endpoint. All fields are optional.
  '/sandbox/employment/{individual_id}':
    parameters:
      - schema:
          type: string
        name: individual_id
        in: path
        required: true
    put:
      summary: Update sandbox employment
      operationId: put-sandbox-employment-individual_id
      responses:
        '200':
          description: OK
      x-stoplight:
        id: lepanl6p1tn04
      tags:
        - Sandbox
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: Fields to update. Takes all fields from the `/employment` endpoint. All fields are optional.
  /sandbox/payment:
    post:
      summary: Add a new sandbox payment
      operationId: post-sandbox-payment
      responses:
        '200':
          description: OK
      x-stoplight:
        id: udmtqvvm890sr
      tags:
        - Sandbox
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: Fields to configure the payment. Takes all fields from the `/payment` endpoint. All fields are optional.
              properties:
                start_date:
                  type: string
                  x-stoplight:
                    id: 32frda3g06vcd
                end_date:
                  type: string
                  x-stoplight:
                    id: zkhm9we7yzeyo
                pay_statements:
                  type: array
                  x-stoplight:
                    id: md80xr8erc6mz
                  items:
                    x-stoplight:
                      id: jt58461ni2ye6
                    type: object
                    properties:
                      individual_id:
                        type: string
                        x-stoplight:
                          id: y4dpayz91m43h
                        format: uuid
                      type:
                        type: string
                        x-stoplight:
                          id: 4gfrdbgtpd9f9
                      payment_method:
                        type: string
                        x-stoplight:
                          id: 7vl3slmfr5mr0
                      total_hours:
                        type: number
                        x-stoplight:
                          id: o5xvrhiunfewv
                      gross_pay:
                        $ref: ../employer/openapi.yaml#/components/schemas/Money
                      net_pay:
                        $ref: ../employer/openapi.yaml#/components/schemas/Money
                      earnings:
                        type: array
                        x-stoplight:
                          id: 3k6facnymtklm
                        items:
                          x-stoplight:
                            id: mp0rsbo2dvsvo
                          type: object
                      taxes:
                        type: array
                        x-stoplight:
                          id: 9w8f9cp75i57d
                        items:
                          x-stoplight:
                            id: nak9tuva5cggj
                          type: object
                      employee_deductions:
                        type: array
                        x-stoplight:
                          id: vfn0d7eciuqmt
                        items:
                          x-stoplight:
                            id: smbwygehmfl9u
                          type: object
                      employer_contributions:
                        type: array
                        x-stoplight:
                          id: d8xcd9v69x4vf
                        items:
                          x-stoplight:
                            id: 406ifctcz7rh9
                          type: object
  /sandbox/jobs/configuration:
    get:
      summary: Get configurations for sandbox jobs
      tags:
        - Sandbox
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SandboxJobConfiguration'
              examples:
                success:
                  value:
                    - type: data_sync_all
                      completion_status: success
      operationId: get-sandbox-jobs-configuration
      x-stoplight:
        id: 7a9g061y4frbl
    put:
      summary: Update configurations for sandbox jobs
      operationId: put-sandbox-jobs-configuration
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SandboxJobConfiguration'
      x-stoplight:
        id: mhl41onpvfwyt
      tags:
        - Sandbox
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SandboxJobConfiguration'
            examples:
              Example 1:
                value:
                  type: data_sync_all
                  completion_status: success
components:
  schemas:
    Paging:
      title: Paging
      type: object
      properties:
        count:
          type: integer
          description: The total number of elements for the entire query (not just the given page)
        offset:
          type: integer
          description: The current start index of the returned list of elements
      x-tags:
        - Models
    BenefitFrequency:
      type: string
      title: BenefitFrequency
      enum:
        - one_time
        - every_paycheck
      x-tags:
        - Models
      nullable: true
    BenefitFeature:
      title: BenefitFeature
      type: object
      properties:
        description:
          type: string
          nullable: true
        frequencies:
          type: array
          description: The list of frequencies supported by the provider for this benefit
          items:
            $ref: '#/components/schemas/BenefitFrequency'
        employee_deduction:
          type: array
          description: Supported deduction types. An empty array indicates deductions are not supported.
          nullable: true
          items:
            type: string
            enum:
              - fixed
              - percent
        company_contribution:
          type: array
          description: Supported contribution types. An empty array indicates contributions are not supported.
          nullable: true
          items:
            type: string
            enum:
              - fixed
              - percent
        annual_maximum:
          type: boolean
          description: Whether the provider supports an annual maximum for this benefit.
          nullable: true
        catch_up:
          type: boolean
          description: Whether the provider supports catch up for this benefit. This field will only be true for retirement benefits.
          nullable: true
        hsa_contribution_limit:
          description: Whether the provider supports HSA contribution limits. Empty if this feature is not supported for the benefit. This array only has values for HSA benefits.
          type: array
          nullable: true
          items:
            type: string
            enum:
              - individual
              - family
    ClientType:
      type: string
      title: ClientType
      enum:
        - production
        - development
        - sandbox
      description: The type of application associated with a token.
      x-tags:
        - Models
    ConnectionType:
      type: string
      title: ConnectionType
      enum:
        - provider
        - finch
      description: |-
        The type of the connection associated with the token.<br>
        `provider` - connection to an external provider<br>
        `finch` - finch-generated data.
      x-tags:
        - Models
    BenefitFeaturesAndOperations:
      type: object
      nullable: true
      properties:
        supported_features:
          $ref: '#/components/schemas/BenefitFeature'
        supported_operations:
          $ref: '#/components/schemas/SupportPerBenefitType'
    BenefitsSupport:
      type: object
      nullable: true
      description: 'Each benefit type and their supported features. If the benefit type is not supported, the property will be null'
      properties:
        '457':
          $ref: '#/components/schemas/BenefitFeaturesAndOperations'
        401k:
          $ref: '#/components/schemas/BenefitFeaturesAndOperations'
        401k_roth:
          $ref: '#/components/schemas/BenefitFeaturesAndOperations'
        401k_loan:
          $ref: '#/components/schemas/BenefitFeaturesAndOperations'
        403b:
          $ref: '#/components/schemas/BenefitFeaturesAndOperations'
        403b_roth:
          $ref: '#/components/schemas/BenefitFeaturesAndOperations'
        457_roth:
          $ref: '#/components/schemas/BenefitFeaturesAndOperations'
        s125_medical:
          $ref: '#/components/schemas/BenefitFeaturesAndOperations'
        s125_dental:
          $ref: '#/components/schemas/BenefitFeaturesAndOperations'
        s125_vision:
          $ref: '#/components/schemas/BenefitFeaturesAndOperations'
        hsa_pre:
          $ref: '#/components/schemas/BenefitFeaturesAndOperations'
        hsa_post:
          $ref: '#/components/schemas/BenefitFeaturesAndOperations'
        fsa_medical:
          $ref: '#/components/schemas/BenefitFeaturesAndOperations'
        fsa_dependent_care:
          $ref: '#/components/schemas/BenefitFeaturesAndOperations'
        simple_ira:
          $ref: '#/components/schemas/BenefitFeaturesAndOperations'
        simple:
          $ref: '#/components/schemas/BenefitFeaturesAndOperations'
        commuter:
          $ref: '#/components/schemas/BenefitFeaturesAndOperations'
        custom_post_tax:
          $ref: '#/components/schemas/BenefitFeaturesAndOperations'
        custom_pre_tax:
          $ref: '#/components/schemas/BenefitFeaturesAndOperations'
      additionalProperties: false
    AuthenticationMethod:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/AuthenticationType'
        benefits_support:
          $ref: '#/components/schemas/BenefitsSupport'
        supported_fields:
          $ref: '#/components/schemas/SupportedFields'
    SupportedFields:
      type: object
      properties:
        company:
          $ref: '#/components/schemas/SupportedCompanyFields'
        directory:
          $ref: '#/components/schemas/SupportedDirectoryFields'
        individual:
          $ref: '#/components/schemas/SupportedIndividualFields'
        employment:
          $ref: '#/components/schemas/SupportedEmploymentFields'
        payment:
          $ref: '#/components/schemas/SupportedPaymentFields'
        pay_statement:
          $ref: '#/components/schemas/SupportedPayStatementFields'
      nullable: true
    SupportedCompanyFields:
      type: object
      properties:
        id:
          type: boolean
        legal_name:
          type: boolean
        entity:
          type: object
          properties:
            type:
              type: boolean
            subtype:
              type: boolean
        primary_email:
          type: boolean
        primary_phone_number:
          type: boolean
        ein:
          type: boolean
        accounts:
          type: object
          properties:
            routing_number:
              type: boolean
            account_name:
              type: boolean
            institution_name:
              type: boolean
            account_type:
              type: boolean
            account_number:
              type: boolean
        departments:
          type: object
          properties:
            name:
              type: boolean
            parent:
              type: object
              properties:
                name:
                  type: boolean
        locations:
          type: object
          properties:
            line1:
              type: boolean
            line2:
              type: boolean
            city:
              type: boolean
            state:
              type: boolean
            postal_code:
              type: boolean
            country:
              type: boolean
    SupportedDirectoryFields:
      type: object
      properties:
        paging:
          type: object
          properties:
            count:
              type: boolean
            offset:
              type: boolean
        individuals:
          type: object
          properties:
            id:
              type: boolean
            first_name:
              type: boolean
            middle_name:
              type: boolean
            last_name:
              type: boolean
            is_active:
              type: boolean
            department:
              type: boolean
            manager:
              type: object
              properties:
                id:
                  type: boolean
    SupportedIndividualFields:
      type: object
      properties:
        id:
          type: boolean
        first_name:
          type: boolean
        middle_name:
          type: boolean
        last_name:
          type: boolean
        preferred_name:
          type: boolean
        dob:
          type: boolean
        gender:
          type: boolean
        ethnicity:
          type: boolean
        ssn:
          type: boolean
        emails:
          type: object
          properties:
            data:
              type: boolean
            type:
              type: boolean
        phone_numbers:
          type: object
          properties:
            data:
              type: boolean
            type:
              type: boolean
        residence:
          type: object
          properties:
            city:
              type: boolean
            country:
              type: boolean
            line1:
              type: boolean
            line2:
              type: boolean
            postal_code:
              type: boolean
            state:
              type: boolean
    SupportedEmploymentFields:
      type: object
      properties:
        id:
          type: boolean
        first_name:
          type: boolean
        middle_name:
          type: boolean
        last_name:
          type: boolean
        title:
          type: boolean
        start_date:
          type: boolean
        end_date:
          type: boolean
        is_active:
          type: boolean
        income_history:
          type: boolean
        class_code:
          type: boolean
        custom_fields:
          type: boolean
        department:
          type: object
          properties:
            name:
              type: boolean
        employment:
          type: object
          properties:
            type:
              type: boolean
            subtype:
              type: boolean
        income:
          type: object
          properties:
            amount:
              type: boolean
            currency:
              type: boolean
            unit:
              type: boolean
        location:
          type: object
          properties:
            line1:
              type: boolean
            line2:
              type: boolean
            city:
              type: boolean
            state:
              type: boolean
            postal_code:
              type: boolean
            country:
              type: boolean
        manager:
          type: object
          properties:
            id:
              type: boolean
    SupportedPaymentFields:
      type: object
      properties:
        id:
          type: boolean
        pay_date:
          type: boolean
        debit_date:
          type: boolean
        company_debit:
          type: boolean
        gross_pay:
          type: boolean
        net_pay:
          type: boolean
        employer_taxes:
          type: boolean
        employee_taxes:
          type: boolean
        individual_ids:
          type: boolean
        pay_period:
          type: object
          properties:
            start_date:
              type: boolean
            end_date:
              type: boolean
    SupportedPayStatementFields:
      type: object
      properties:
        paging:
          type: object
          properties:
            count:
              type: boolean
            offset:
              type: boolean
          required:
            - count
            - offset
        pay_statements:
          type: object
          properties:
            individual_id:
              type: boolean
            type:
              type: boolean
            payment_method:
              type: boolean
            total_hours:
              type: boolean
            gross_pay:
              type: boolean
            net_pay:
              type: boolean
            earnings:
              type: object
              properties:
                type:
                  type: boolean
                name:
                  type: boolean
                amount:
                  type: boolean
                currency:
                  type: boolean
            employee_deductions:
              type: object
              properties:
                name:
                  type: boolean
                amount:
                  type: boolean
                type:
                  type: boolean
                pre_tax:
                  type: boolean
                currency:
                  type: boolean
            employer_deductions:
              type: object
              properties:
                name:
                  type: boolean
                amount:
                  type: boolean
                currency:
                  type: boolean
            taxes:
              type: object
              properties:
                type:
                  type: boolean
                name:
                  type: boolean
                employer:
                  type: boolean
                amount:
                  type: boolean
                currency:
                  type: boolean
    OperationSupport:
      type: string
      enum:
        - supported
        - not_supported_by_finch
        - not_supported_by_provider
        - client_access_only
      description: |
        - `supported`: This operation is supported by both the provider and Finch <br>
        - `not_supported_by_finch`: This operation is not supported by Finch but supported by the provider <br>
        - `not_supported_by_provider`: This operation is not supported by the provider, so Finch cannot support <br>
        - `client_access_only`: This behavior is supported by the provider, but only available to the client and not to Finch
    OperationSupportMatrix:
      type: object
      properties:
        create:
          $ref: '#/components/schemas/OperationSupport'
        update:
          $ref: '#/components/schemas/OperationSupport'
        delete:
          $ref: '#/components/schemas/OperationSupport'
        read:
          $ref: '#/components/schemas/OperationSupport'
    SupportPerBenefitType:
      type: object
      title: SupportPerBenefitType
      properties:
        company_benefits:
          $ref: '#/components/schemas/OperationSupportMatrix'
        individual_benefits:
          $ref: '#/components/schemas/OperationSupportMatrix'
    Error:
      title: Error
      type: object
      description: Generic error response structure
      properties:
        code:
          type: integer
          description: The status code of the request.
        name:
          type: string
          description: Identifier describing the error.
        finch_code:
          type: string
          description: A descriptive identifier for the error.
        message:
          type: string
          description: A short English description that provides more information about the error.
      x-examples:
        not-found-error:
          code: 404
          name: not_found_error
          finch_code: individual_not_found
          message: Individual not found for benefit
    AutomatedAsyncJob:
      title: AutomatedAsyncJob
      x-stoplight:
        id: a7x0jx1utnuc8
      type: object
      x-examples:
        Example 1:
          job_id: job-7e8d96ab-898f-4495-8b74-6316bb30b772
          type: scheduled
          code: 200
          created_at: '2019-08-24T14:15:22Z'
          started_at: '2019-08-24T14:15:22Z'
          completed_at: '2019-08-24T14:15:22Z'
      properties:
        job_id:
          type: string
          description: The id of the job that has been created.
          format: uuid
        job_url:
          type: string
          x-stoplight:
            id: 458kw0otrh80f
          description: The url that can be used to retrieve the job status
        type:
          type: string
          description: Only `data_sync_all` currently supported
          enum:
            - data_sync_all
        status:
          type: string
          x-stoplight:
            id: gms9h3qps1fww
          enum:
            - pending
            - in_progress
            - complete
            - error
            - reauth_error
            - permissions_error
        created_at:
          type: string
          format: date-time
          description: 'The datetime when the job was created. for scheduled jobs, this will be the initial connection time. For ad-hoc jobs, this will be the time the creation request was received.'
        scheduled_at:
          type: string
          x-stoplight:
            id: 4r3jtdvecoqw2
          format: date-time
          description: "The datetime a job is scheduled to be run. For scheduled jobs, this datetime can be in the future if the job has not yet been enqueued. For ad-hoc jobs, this field will be\_null."
          nullable: true
        started_at:
          type: string
          format: date-time
          description: The datetime a job entered into the job queue.
          nullable: true
        completed_at:
          type: string
          format: date-time
          description: The datetime the job completed.
          nullable: true
    ManualAsyncJob:
      title: ManualAsyncJob
      x-stoplight:
        id: vddn2z8jbg1c6
      type: object
      x-examples:
        Example 1:
          job_id: 453bd7d7-5355-4d6d-a38e-d9e7eb218c3f
          status: complete
          body:
            - individual_id: 46decc95-451e-44ef-baac-b228d778267f
              message: Successfully updated benefit for individual
      properties:
        job_id:
          type: string
          format: uuid
        status:
          type: string
          enum:
            - pending
            - in_progress
            - error
            - complete
        body:
          type: array
          description: 'Specific information about the job, such as individual statuses for batch jobs.'
          nullable: true
          items: {}
    AuthenticationType:
      title: AuthenticationType
      x-stoplight:
        id: atlupll0dlij5
      enum:
        - credentials
        - api_token
        - oauth
        - assisted
    ConnectionStatus:
      title: ConnectionStatus
      x-stoplight:
        id: eukf3vzdyxpnd
      enum:
        - pending
        - processing
        - connected
        - error_no_account_setup
        - error_permissions
        - reauth
    SandboxJobConfiguration:
      title: SandboxJobConfiguration
      x-stoplight:
        id: rntyxu7e15yse
      type: object
      properties:
        type:
          x-stoplight:
            id: 4ou204ev6gh5e
          enum:
            - data_sync_all
        completion_status:
          x-stoplight:
            id: u5xc77mkjkila
          enum:
            - success
            - reauth_error
            - permissions_error
            - error
      required:
        - type
        - completion_status
  requestBodies:
    Forward:
      content:
        application/json:
          schema:
            type: object
            description: Forward Request Body
            properties:
              method:
                type: string
                description: 'The HTTP method for the forwarded request. Valid values include: `GET` , `POST` , `PUT` , `DELETE` , and `PATCH`.'
              route:
                type: string
                description: 'The URL route path for the forwarded request. This value must begin with a forward-slash ( / ) and may only contain alphanumeric characters, hyphens, and underscores.'
              headers:
                type: object
                description: 'The HTTP headers to include on the forwarded request. This value must be specified as an object of key-value pairs. Example: `{"Content-Type": "application/xml", "X-API-Version": "v1" }`'
                nullable: true
              params:
                type: object
                description: The query parameters for the forwarded request. This value must be specified as a valid JSON object rather than a query string.
                nullable: true
              data:
                type: string
                description: The body for the forwarded request. This value must be specified as either a string or a valid JSON object.
                nullable: true
            required:
              - method
              - route
          examples:
            Sample:
              value:
                method: POST
                route: /people/search
                headers:
                  content-type: application/json
                params:
                  showInactive: true
                  humanReadable: true
                data: null
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      description: Please use your Access Token
    basicAuth:
      type: http
      scheme: basic
      description: 'base64 encoded string of `client_id`:`client_secret`'
  parameters:
    API-Version:
      name: Finch-API-Version
      in: header
      required: true
      schema:
        type: string
        default: '2020-09-17'
        format: date
        pattern: YYYY-MM-DD
      description: Header used to specify the version for a given API request. Current version is 2020-09-17.
    Content-Type:
      name: Content-Type
      in: header
      required: true
      schema:
        type: string
        default: application/json
      description: 'Used to indicate the original media type of the resource '
security:
  - bearerAuth: []
